/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.8/userguide/building_java_projects.html in the Gradle documentation.
 * This project uses @Incubating APIs which are subject to change.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'java'
    id "org.gradle.java"
    id 'org.openjfx.javafxplugin' version '0.1.0'
    id 'com.adarshr.test-logger' version '4.0.0'
    id "com.scuilion.syntastic" version "0.3.9"
}

javafx {
    version = "22.0.1"
    modules = ['javafx.controls', 'javafx.fxml', 'javafx.media']
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'com.github.almasb:fxgl:21.1'
    implementation 'org.junit.jupiter:junit-jupiter-api:5.9.1'
}

testing {
    suites {
        // Configure the built-in test suite
        test {
            // Use JUnit Jupiter test framework
            useJUnitJupiter('5.9.1')
        }
    }
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

tasks.withType(Test) {
    testLogging {
        exceptionFormat "full"
        events "started", "skipped", "passed", "failed"
        showStandardStreams true
    }
}

jar {
    exclude 'META-INF/*.SF', 'META-INF/*.DSA', 'META-INF/*.RSA', 'META-INF/*.MF'
    manifest {
        attributes['Main-Class'] = 'project.core.App'
    }
}

testlogger {
    theme 'mocha'
    showExceptions true
    showStackTraces true
    showFullStackTraces false
    showCauses true
    slowThreshold 2000
    showSummary true
    showSimpleNames false
    showPassed true
    showSkipped true
    showFailed true
    showOnlySlow false
    showStandardStreams false
    showPassedStandardStreams true
    showSkippedStandardStreams true
    showFailedStandardStreams true
    logLevel 'lifecycle'
}


processResources {
    duplicatesStrategy = 'INCLUDE'
}

application {
    // Define the main class for the application.
    mainClass = 'project.core.App'
}

sourceSets {
    main {
        resources {
            srcDirs = ["src/main/java", 'src/main/resources']
        }
    }
}