/*
 * This source file was generated by the Gradle 'init' task
 */
package project.core;

import com.almasb.fxgl.app.GameSettings;
import org.junit.jupiter.api.Test;
import project.misc.ShortPathDetection;

import java.util.List;

import static org.junit.jupiter.api.Assertions.assertNotNull;
import static org.junit.jupiter.api.Assertions.assertTrue;

class AppTest {
    @Test
    void shortPath() {
        ShortPathDetection pathFinder = new ShortPathDetection(10, 10);
        List<ShortPathDetection.Node> path = pathFinder.findPath(0, 0, 9, 9);

        for (ShortPathDetection.Node node : path) {
            System.out.println("Step: (" + node.x + ", " + node.y + ")");
        }
        assertNotNull(path);
    }

    @Test
    public void testInitSettingsTime() {
        GameSettings settings = new GameSettings();
        // Start time measurement
        long startTime = System.currentTimeMillis();
        // Call the method you want to test
        App gameApp = new App();
        gameApp.initSettings(settings);  // null for the sake of testing, normally you'd pass GameSettings

        // End time measurement
        long endTime = System.currentTimeMillis();
        long timeTaken = endTime - startTime;

        // You can set a threshold for acceptable execution time, e.g., 500 ms
        long maxAllowedTime = 256;

        System.out.println("time taken:" + timeTaken + " ms");

        // Assert that the time taken is less than the max allowed time
        assertTrue(timeTaken < maxAllowedTime, "Initialization took too long: " + timeTaken + " ms");
    }
}
